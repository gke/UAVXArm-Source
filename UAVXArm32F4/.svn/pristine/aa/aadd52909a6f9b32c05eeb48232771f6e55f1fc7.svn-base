SHELL=cmd

#V1 = -DV1_BOARD  // Beeper reversed but must be re-wired to 5V

EXPFLAGS = -DUSE_THERMAL 
#EXPFLAGS = -DUSE_THERMAL -DSUPPRESS_FULL_ROLL_MATH

#EXPFLAGS = -DUSE_VERSANO_GRAVITY_COMP

#TARGET=UAVXArm32F4_V4_FRSKY_V2
#CONFIG=  -DV4_BOARD -DFRSKY_TELEMETRY_ONLY -DUSE_RF_PORT_FOR_CURR -DARM_MATH_CM4  -DHSE_VALUE=8000000

#TARGET=UAVXArm32F4_V4P_EXP
#CONFIG=  -DV4_BOARD  -DARM_MATH_CM4 $(EXPFLAGS) -DHSE_VALUE=8000000

#TARGET=UAVXArm32F4_V4P
#CONFIG=  -DV4_BOARD  -DARM_MATH_CM4  -DHSE_VALUE=8000000

#==========================================================================================

#TARGET=UAVXArm32F4_V3_FRSKY_V2
#CONFIG= -DV3_BOARD -DFRSKY_TELEMETRY_ONLY -DARM_MATH_CM4 -DHSE_VALUE=8000000

TARGET=UAVXArm32F4_V3P_EXP
CONFIG= -DV3_BOARD  -DARM_MATH_CM4 $(EXPFLAGS) -DHSE_VALUE=8000000

#TARGET=UAVXArm32F4_V3P
#CONFIG= -DV3_BOARD  -DARM_MATH_CM4  -DHSE_VALUE=8000000

#==========================================================================================

# COMMISSIONING

#TARGET=LevArm32F4_V4_Test
#CONFIG = -DARM_MATH_CM4 -DV4_BOARD -DCOMMISSIONING_TEST $(V1) -DUSE_V4_USART3  -DHSE_VALUE=8000000

#TARGET=LevArm32F4_V3_Test
#CONFIG= -DARM_MATH_CM4 -DCOMMISSIONING_TEST $(V1) -DV3_BOARD -DUSE_UAVP_COMMS -DHSE_VALUE=8000000 

#==========================================================================================


LINK_SCRIPT=stm32f4_eeprom16k.ld

# System configuration - UNCOMMENT AS DESIRED

#Windows 7

#TCHAIN="C:/Program Files (x86)/Atollic/TrueSTUDIO for STMicroelectronics STM32 Lite 2.3.0/ARMTools/bin/"
#TCHAIN="C:/Program Files (x86)/yagarto/bin/"
#TCHAIN="C:/Program Files (x86)/CodeSourcery/Sourcery_CodeBench_Lite_for_ARM_EABI/bin/"
#TCHAIN="C:/MentorGraphics/CodeSourcery/Sourcery_CodeBench_Lite_for_ARM_EABI/bin/"
#TCHAIN="C:\Program Files\GNU Tools ARM Embedded\4.9 2015q3\bin\"
TCHAIN="C:\Program Files\GNU Tools ARM Embedded\5.3 2016q1\bin\"

#Windows XP
#TCHAIN="C:/Program Files/Atollic/TrueSTUDIO for STMicroelectronics STM32 Lite 2.3.0/ARMTools/bin/"
#TCHAIN="C:/Program Files/yagarto/bin/"

#Atollic TrueStudio
#CC=$(TCHAIN)arm-atollic-eabi-gcc
#OBJCOPY=$(TCHAIN)arm-atollic-eabi-objcopy
#OPT = -O0

#Yagarto currently gcc 4.6.2
#OPT = -Os
#CC=$(TCHAIN)arm-none-eabi-gcc
#OBJCOPY=$(TCHAIN)arm-none-eabi-objcopy

#Code Sourcery current gcc 4.6.1
#OPT = -O3
#OPT = -Os
OPT = -O3
CC = $(TCHAIN)arm-none-eabi-gcc
OBJCOPY = $(TCHAIN)arm-none-eabi-objcopy

#FPFLAGS= -mcpu=cortex-m4 -mthumb -mfloat-abi=softfp -mfpu=fpv4-sp-d16 -mlittle-endian 
FPFLAGS=  -D__FPU_PRESENT -D__VFP_FP__ -mthumb -march=armv7e-m -mtune=cortex-m4 -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard 

#STM32F405RG -nostdinc -Wdouble-promotion -D__FPU_PRESENT -nostdinc -mlittle-endian
#mthumb-interwork
RM = rm -rf

# Define output directory
OBJECT_DIR = obj
BIN_DIR = $(OBJECT_DIR)

# Assembler, Compiler and Linker flags and linker script settings
LINKER_FLAGS= -lm $(FPFLAGS) -Wl,--gc-sections -T$(LINK_SCRIPT) -static \
	-Wl,-cref "-Wl,-Map=$(BIN_DIR)/$(TARGET).map" -Wl,--defsym=malloc_getpagesize_P=0x1000
	
ASSEMBLER_FLAGS=-c -g $(OPT) $(FPFLAGS) -x assembler-with-cpp  \
	-Isrc \
	-Isrc\stm \
	-Ilib\Device\ST\STM32F4xx\Include \
	-Ilib\CMSIS\inc \
	-Ilib\Std\inc

COMPILER_FLAGS=-c -g  $(OPT) $(FPFLAGS) $(CONFIG) -Wall -ffunction-sections -fdata-sections \
	-D"STM32F4XX" -D"USE_STDPERIPH_DRIVER"  \
	-Isrc \
	-Iincludes \
	-Isrc\stm \
	-Ilib\Device\ST\STM32F4xx\Include \
	-Ilib\CMSIS\inc \
	-Ilib\Std\inc

# Define sources and objects
SRC := $(wildcard */*/*/*/*/*/*/*.c) \
	$(wildcard */*/*/*/*/*/*.c) \
	$(wildcard */*/*/*/*/*.c) \
	$(wildcard */*/*/*/*.c) \
	$(wildcard */*/*/*.c) \
	$(wildcard */*/*.c) \
	$(wildcard */*.c)
	
MAIN_SRC := $(wildcard src/*/*/*/*/*/*/*.c) \
	$(wildcard src/*/*/*/*/*/*.c) \
	$(wildcard src/*/*/*/*/*.c) \
	$(wildcard src/*/*/*/*.c) \
	$(wildcard src/*/*/*.c) \
	$(wildcard src/*/*.c) \
	$(wildcard src/*.c)
	
	
ASM_SRC := $(wildcard */*/*/startup_stm32f4xx.s) \
#ASM_SRC := $(wildcard */*/*/*/*/*/*/*/*.s) \
#	$(wildcard */*/*/*/*/*/*/*.s) \
#	$(wildcard */*/*/*/*/*/*.s) \
#	$(wildcard */*/*/*/*/*.s) \
#	$(wildcard */*/*/*/*.s) \
#	$(wildcard */*/*/*.s) \
#	$(wildcard */*/*.s) \
#	$(wildcard */*.s)


OBJS := $(SRC:%.c=$(OBJECT_DIR)/%.o) $(ASM_SRC:%.s=$(OBJECT_DIR)/%.o)
OBJS := $(OBJS:%.S=$(OBJECT_DIR)/%.o) 

STD_PERIPHERAL_OBJS := $(wildcard obj/lib/Peripherals/src/*.o)
CMSIS_OBJS := $(wildcard obj/lib/CMSIS/src/*.o)

MAIN_OBJS := $(wildcard obj/src/*/*/*/*/*/*/*.o) \
	$(wildcard obj/src/*/*/*/*/*/*.o) \
	$(wildcard obj/src/*/*/*/*/*.o) \
	$(wildcard obj/src/*/*/*/*.o) \
	$(wildcard obj/src/*/*/*.o) \
	$(wildcard obj/src/*/*.o) \
	$(wildcard obj/src/*.o) \
	$(wildcard lib/peripherals/*/*/*/*/*/*/*.o) \
	$(wildcard lib/peripherals/*/*/*/*/*/*.o) \
	$(wildcard lib/peripherals/*/*/*/*/*.o) \
	$(wildcard lib/peripherals/*/*/*/*.o) \
	$(wildcard lib/peripherals/*/*/*.o) \
	$(wildcard lib/peripherals/*/*.o) \
	$(wildcard lib/peripherals/*.o)
	
all: uavxarm
	$(OBJCOPY) -O ihex "$(BIN_DIR)/$(TARGET).elf" "$(BIN_DIR)/$(TARGET).hex"
	$(RM) $(OBJS) "$(BIN_DIR)/$(TARGET).elf" "$(BIN_DIR)/$(TARGET).map" "$(BIN_DIR)/src" "$(BIN_DIR)/lib"

svn: src/UAVXRevisionSVN.h
	SubWCRev . src/UAVXRevisionSVN.h src/UAVXRevision.h

uavxarm: svn $(OBJS) 
	$(CC) -o "$(BIN_DIR)/$(TARGET).elf" $(OBJS)  $(LINKER_FLAGS) 

clean:
#	$(RM) $(OBJS) "$(BIN_DIR)/*.*"
	$(RM) $(OBJS) "$(BIN_DIR)/*.elf" "$(BIN_DIR)/$(TARGET).map" "$(BIN_DIR)/src" "$(BIN_DIR)/lib"
	
peripheral_libs:
	ar  rcs obj/lib/libperipherals.a  $(STD_PERIPHERAL_OBJS)
	
cmsis_libs:
	ar  rcs obj/lib/libcmsis.a  $(CMSIS_OBJS)

$(OBJECT_DIR)/%.o: %.c
	@mkdir $(subst /,\,$(dir $@)) 2> NUL || echo off
	$(CC) $(COMPILER_FLAGS) $< -o $@
	
$(OBJECT_DIR)/%.o: %.s
	@mkdir $(subst /,\,$(dir $@)) 2> NUL || echo off
	$(CC) $(ASSEMBLER_FLAGS) $< -o $@
	
$(OBJECT_DIR)/%.o: %.S
	@mkdir $(subst /,\,$(dir $@)) 2> NUL || echo off
	$(CC) $(ASSEMBLER_FLAGS) $< -o $@
	
