// ===============================================================================================
// =                                UAVX Quadrocopter Controller                                 =
// =                           Copyright (c) 2008 by Prof. Greg Egan                             =
// =                 Original V3.15 Copyright (c) 2007 Ing. Wolfgang Mahringer                   =
// =                     http://code.google.com/p/uavp-mods/ http://uavp.ch                      =
// ===============================================================================================

//    This is part of UAVX.

//    UAVX is free software: you can redistribute it and/or modify it under the terms of the GNU
//    General Public License as published by the Free Software Foundation, either version 3 of the
//    License, or (at your option) any later version.

//    UAVX is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without
//    even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
//    See the GNU General Public License for more details.

//    You should have received a copy of the GNU General Public License along with this program.
//    If not, see http://www.gnu.org/licenses/


#ifndef _outputs_h
#define _outputs_h

#define PWServoFilter		MediumFilter


void InitPWM(void);
void pwmWrite(uint8 p, real32 pulseWidth, uint16 pulsemin,
		uint16 pulsemax);

void ShowESCType(uint8 s);

void UpdateDrives(void);
void StopDrives(void);
void InitDrives(void);

void DoI2CESCs(void);

void ProgramSlaveAddress(uint8 s, uint8 addr);
void ConfigureESCs(uint8 s);

void driveWrite(uint8 channel, real32 v);

enum PWMCamTags {
	CamRollC = 8, CamPitchC = 9
};

enum PWMTagsQuad {
	FrontC = 0, LeftC, RightC, BackC
};

enum PWMTagsQuadCoax {
	QFrontTC = 0,
	QLeftTC,
	QRightTC,
	QBackTC,
	QFrontBC = 0,
	QLeftBC,
	QRightBC,
	QBackBC
};

// order is important for X3D & Holger ESCs
enum PWMTagsVT {
	FrontLeftC = 0, FrontRightC
};

enum PWMTagsTri {
	YawC = 4
};

enum PWMTagsY6 {
	FrontTC = 0, LeftTC, RightTC, FrontBC, LeftBC, RightBC
};

enum PWMTagsHexa {
	HFrontC = 0, HLeftFrontC, HRightFrontC, HLeftBackC, HRightBackC, HBackC
};

enum PWMTagsAileron {
	ThrottleC = 0,
	RightAileronC,
	LeftAileronC,
	ElevatorC,
	RudderC = 8,
	FlapsC = 9
};
enum PWMTagsElevon {
	RightElevonC = 1, LeftElevonC = 2
};
enum PWMTagsVTOL {
	RightPitchYawC = 1, LeftPitchYawC = 2, RollC = 3
};
enum PWMTags {
	K1 = 0, K2, K3, K4, K5, K6, K7, K8, K9, K10
};

extern uint8 CurrESCType;
//extern uint32 ESCI2CFail[];

extern real32 Rl, Pl, Yl, Fl;

extern const uint8 DM[];
extern real32 PWSum[];
extern int8 PWDiagnostic[];
extern uint32 PWSamples;
extern real32 PW[], PWp[];
extern real32 PWSense[];
extern const uint8 PWMOutputsUsed[];
extern uint8 CurrMaxPWMOutputs;
extern PIDStruct CamRoll, CamPitch;
extern real32 RollPitchMixFrac;
extern real32 DFT[];
extern real32 CGOffset;

extern real32 I2CESCMax;

extern boolean UsingPWMSync;
extern real32 NoOfDrivesR;


#endif

